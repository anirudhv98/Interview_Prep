/*
https://leetcode.com/problems/group-anagrams/
Group Anagrams

Given an array of strings strs, group the anagrams together. You can return the answer in any order.

An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.

Example 1:

Input: strs = ["eat","tea","tan","ate","nat","bat"]
Output: [["bat"],["nat","tan"],["ate","eat","tea"]]

Example 2:

Input: strs = [""]
Output: [[""]]

Example 3:

Input: strs = ["a"]
Output: [["a"]]
*/

class Solution {
    public List<List<String>> groupAnagrams(String[] strs) {
        List<List<String>> ans = new ArrayList<>();
        
        HashMap<String,List<String>> map = new HashMap<>();
        for(String str : strs)
        {
            char []ch = str.toCharArray();
            Arrays.sort(ch);
            String temp = new String(ch);
            if(map.containsKey(temp))
            {
                List<String> tempList = new ArrayList<>();
                tempList = map.get(temp);
                tempList.add(str);
                map.put(temp,tempList);
            }
            else
            {
                List<String> tempList = new ArrayList<>();
                tempList.add(str);
                map.put(temp,tempList);
            }
        }
        for(String key : map.keySet())
        {
            ans.add(map.get(key));
        }
        return ans;
    }
}

/*
Time complexity : 

Runtime : O(n*klog(k)) where k is the maximum length of string
        For loop = O(n)
        Arrays.sort() = klog(k)
        map.containsKey() = O(1)
        map.get() = O(1)
        map.put() = O(1)
*/