/*
Remove Nth Node From End of List

Given the head of a linked list, remove the nth node from the end of the list and return its head.

Input: head = [1,2,3,4,5], n = 2
Output: [1,2,3,5]

Input: head = [1], n = 1
Output: []

*/

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        ListNode back = new ListNode(-1);
        ListNode dummy = back;
        back.next=head;
        ListNode front = head;
        for(int i=0;i<n;i++)
        {
            front=front.next;
        }
        while(front!=null)
        {
            front=front.next;
            back=back.next;
        }
        back.next=back.next.next;
        return dummy.next;
    }
}

/*
Time Complexity : O(n)
*/