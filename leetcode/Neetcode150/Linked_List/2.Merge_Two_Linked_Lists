/*
Merge Two Sorted Lists
https://leetcode.com/problems/merge-two-sorted-lists/

You are given the heads of two sorted linked lists list1 and list2.

Merge the two lists in a one sorted list. The list should be made by splicing together the nodes of the first two lists.

Return the head of the merged linked list.

Input: list1 = [1,2,4], list2 = [1,3,4]
Output: [1,1,2,3,4,4]

Input: list1 = [], list2 = []
Output: []
*/



/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        ListNode dummy = new ListNode(0);
        ListNode head=dummy;
        while(list1!=null && list2!=null)
        {
            if(list1.val<=list2.val)
            {
                dummy.next=list1;
                list1=list1.next;
            }
            else
            {
                dummy.next=list2;
                list2=list2.next;
            }
            dummy=dummy.next;
        }
        
        if(list1!=null)
        {
            dummy.next=list1;
        }
        else
        {
            dummy.next=list2;
        }
        return head.next;
    }
}


/*
Time Complexity : Runtime : O(n) where n is the length of the shorter linked list.
*/