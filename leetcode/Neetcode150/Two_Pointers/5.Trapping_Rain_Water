/*
Trapping Rain Water
https://leetcode.com/problems/trapping-rain-water/

Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it can trap after raining.


Input: height = [0,1,0,2,1,0,1,3,2,1,2,1]
Output: 6
Explanation: The above elevation map (black section) is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped.

*/

class Solution {
    public int trap(int[] height) {
        int leftMax=0,maximumIndex=0,maximumHeight=0,totalWater=0;
        for(int i=0;i<height.length;i++)
        {
            if(height[i]>maximumHeight)
            {
                maximumHeight=height[i];
                maximumIndex=i;
            }
        }
        
        for(int i=0;i<=maximumIndex;i++)
        {
            leftMax=Math.max(leftMax,height[i]);
            int currentWater=Math.min(leftMax,maximumHeight)-height[i];
            totalWater+=currentWater;
        }
        leftMax=0;
        for(int i=height.length-1;i>maximumIndex;i--)
        {
            leftMax=Math.max(leftMax,height[i]);
            int currentWater=Math.min(leftMax,maximumHeight)-height[i];
            totalWater+=currentWater;
        }
        
        return totalWater;
    }
}


/*
Time Complexity : 
Running Time : O(n)
*/