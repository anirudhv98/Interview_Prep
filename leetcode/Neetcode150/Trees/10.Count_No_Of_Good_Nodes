/*
Count good nodes in Binary Tree
https://leetcode.com/problems/count-good-nodes-in-binary-tree/

Given a binary tree root, a node X in the tree is named good if in the path from root to X there are no nodes with a value greater than X.

Return the number of good nodes in the binary tree.

Input: root = [3,1,4,3,null,1,5]
Output: 4
*/


/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int goodNodes(TreeNode root) {
        int ans[]=new int[1];
        dfs(root,root.val,ans);
        return ans[0];
    }
    
    public void dfs(TreeNode root,int maxSoFar,int []ans)
    {
        if(root==null)
            return;
        if(root.val>=maxSoFar)
        {
            maxSoFar=root.val;
            ans[0]+=1;
        }
        
        dfs(root.left,maxSoFar,ans);
        dfs(root.right,maxSoFar,ans);
    } 
}

/*
Time Complexity : O(n)
*/